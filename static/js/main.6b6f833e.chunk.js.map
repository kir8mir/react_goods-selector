{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClick","prop","setState","clearSelectedGood","this","className","type","onClick","map","good","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,YAAc,SAACC,GAEb,EAAKH,MAAMC,eAAiBE,EACxB,EAAKC,SAAS,CACdH,aAAc,KAEd,EAAKG,SAAS,CACdH,aAAcE,KAZtB,EAgBEE,kBAAoB,WAClB,EAAKD,SAAS,CACZH,aAAc,MAlBpB,4CAsBE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EAEG,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,uBAIlB,oBAAIE,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRJ,UAAWK,IAAW,CACpB,+BAAgCD,IAASV,IAJ7C,UAOE,6BACE,wBACE,UAAQ,YACRO,KAAK,SACLD,UAAWK,IACT,SACA,CAAE,UAAWD,IAASV,IAExBQ,QAAS,kBAAM,EAAKP,YAAYS,IAPlC,SASGA,IAASV,EACN,IACA,QAIR,oBAAI,UAAQ,YAAYM,UAAU,eAAlC,SACGI,MAvBEA,iBA9CrB,GAAyBE,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b6f833e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleClick = (prop: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.state.selectedGood === prop\n      ? this.setState({\n        selectedGood: '',\n      })\n      : this.setState({\n        selectedGood: prop,\n      });\n  };\n\n  clearSelectedGood = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelectedGood}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': good === selectedGood,\n                })}\n              >\n                <td>\n                  <button\n                    data-cy=\"AddButton\"\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      { 'is-info': good === selectedGood },\n                    )}\n                    onClick={() => this.handleClick(good)}\n                  >\n                    {good === selectedGood\n                      ? '-'\n                      : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}